# https://github.com/actions/upload-release-asset

# This is the command I used to test on a fork of the repo
# git add . && git commit -m a && npm version patch && git push && git push --tags

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

name: Upload Release Asset

jobs:
  build:
    name: Upload Release Asset
    runs-on: ubuntu-latest
    container:
      image: 'node:14.15.3-alpine'
    steps:
      - uses: actions/checkout@v1
      - name: npm install
        run: npm install
      - name: Build
        run: npm run build
        env:
          CI: false # TODO Linting errors cause the build to fail when CI is true (default)
      - name: Pack
        id: pack_npm_module
        run: echo ::set-output name=result::$(npm pack)
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{ steps.pack_npm_module.outputs.result }}
          asset_name: ${{ steps.pack_npm_module.outputs.result }}
          asset_content_type: application/gzip
      - name: Publish release
        uses: StuYarrow/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          id: ${{ steps.create_release.outputs.id }}